<!DOCTYPE html>
<html>
	<head>
	<meta charset='utf-8'>
	<title> nihao </title>
	</head>
	<body>
	<h1> 这是我的第一个标题</h1>
	<p> 我的第一个段落</p>
	</body>
</html>
html
属性: 

a  href  
html class id style title 
class 为元素定义一个或多个类名
id 定义元素的唯一id
style 规定元素的行内样式
title 描述了元素的额外信息

h1  -  h5    hr 水平线

br  换行

文本格式化

b strong  文本加粗

i em 	   文本斜体

a href  target: _blank  rel:nooperer noreferrer

&quot  " 

html 链接-id属性
a id="tips">有用的提示部分< 
a href="#tips">访问有用的提示部分<

如何使用图片连接

a href>img width= height= border=0 src alt >

a href>  target="_top" 跳出框架

发送邮件
a href "mailto:someone@example.com?Subject=Hello%20again" target="_top" > 发送邮件</a>

head>
	title style meta link script noscript base

title>
 meta charset="utf-8"
 meta 元素 
meta name="keywords" content="HTML,CSS,XML,JAVASCRIPT"

meta name="description" content="免费 Web & 编程 教程">

meta name="author" content="Runoob"

每30秒刷新页面
meta http-equiv="refresh" content="30"

base 定义页面连接标签的默认链接地址
link 定义一个文档和外部资源之间的关系
meta 定义了html文档中的元数据
script 定义了客户端的脚本文件
style 定义了html文档的样式文件

html 样式 CSS
css 用于渲染html元素标签的样式.
html使用样式
	如何使用样式
	css 是在html4开始使用的 ,是为了更好的渲染html元素而引入的
	css 可以通过以下方式添加到html中
		内联样式: 在html元素中使用"style"属性
		内部样式表-在html万恶当头部<head>区域使用<style>元素来包含css
		外部使用-使用外部css文件
最好的方式是通过外部引用CSS文件

内联样式
<p style="background-color:green;">这是一个段落</p>

html样式实例- 字体,字体颜色, 字体大小
p style+"font-family:arial;color:red;fone-size:20px;">一个段落</p>

html 样式实例-文本对齐方式
<h1 style="text-align:center;">居中对齐的标题</h1>

内部样式表
head>
style type="text/css">
	body {background-color:yellow;}
	p {color:blue;}
</style>
</head

外部样式表

head>
<line rel="stylesheet" type="text/css" href="mystyle.css">
</head>

link 和 @import之间的区别
1.本质的区别 link为xhtml提供 @import为css提供
2.加载方式的区别 link同时加载 @import为加载完页面后开始加载
3.@import为css2.1提出 ,老浏览器不支持 ,只有在ie5以上才能识别 ,link无此问题
4.使用dom控制样式是的差别: 当使用javascript控制dom去改变样式的时候,智能使用link标签,因为@import不是dom可以控制的

html图像
插入图像
img src(源属性) alt(可替换文本)

设置图像的高度和宽度
img src="*.jpg" alt="this is a img" width="45px" height="50px">
指定一个图像的高度和宽度是一个好习惯,页面加载时就会保留指定的尺寸,如果没有指定大小,加载页面时会破坏html页面的整体布局

排列图片
图片使用align属性(middle top) 默认bottom
浮动图片float:left  right

创建图像映射
map 定义图像地图
创建图像映射
img src="" width height alt usemap="#planetmap">
<map name="planetmap">
<area share="rect" coords="0,0,82.126" alt="sun" href="sun.htm">
<area share="circle" coords="90,58,3" alt href="mercur.htm">
<area shar="circle" coords="124,58,8" alt href="venus.htm">
</map>
coords : 坐标显示(像素单位) rect: 矩形
 
html表格
若干行 由tr定义
	td定义单元格

单元格可以包含 : 文本,图片列表,段落,表单,水平线,表格,等等
table : border=1 边界宽度


html表格和边框属性
border 

html表格表头
table > tr> th>

没有边框的表格
表格中的表头
带有标题的表格
跨行和跨列的表格单元格
表格内的标签
单元格边距
单元格间距
漂亮的单元格

标题 		描述
table		定义表格
th		定义表格的表头
tr		定义表格的行
td		定义表格单元
caption	定义表格标题
colgroup	定义表格列的组
col		定义用于表格列的属性
thead		定义表格的页眉
tbody		定义表格的主体
tfoot		定义表格的页脚

html列表
无序列表 典型的小黑点 ul>li
有序列表 使用数字进行标记 ol> li

HTML 自定义列表
dl>dt|dd dt列表项 dd 列表项的定义

不同类型的有序列表
ol type='A' 大写字母列表 
   type='a' 小写字母列表
   type='I' 罗马数字列表

不同类型的无序列表
ul style='list-style-type:disc' 圆点列表
   style='list-style-type:circle' 圆圈列表
   style='list-style-type:square' 正方形列表

嵌套类表


HTML 区块
div 和 span
   区块元素
	h1  p  ul  table  
   内联元素
	b   td  a  img
   div元素
	块级元素  没有特定的含义 ,会在前后显示折行
   span元素
	内联元素  可用作文本的容器  没有特定的含义
	与css 一同使用时,span元素可用于为部分文本设置样式属性
HTML 布局
   使用div 元素的网页布局


   使用table元素的网页布局

div 定义文档区块 块级 block-level


   
HTML 表单和输入
实例 : 
form action="">
first name: <input type="text" name="fisrtname"> <br>
last name: <input type="text" name="lastname"><br>
</form>

HTML 表单: 
	表单元素云簇用户在表单中输入内容: 
		文本域(textarea)  下拉列表 (select) 单选框 (radio-buttons) 复选框 (checkbox) 等等

HTML 表单 - 输入元素
多数情况下被用到的表单标签是输入标签 <input>
输入类型由type属性定义.
	接下来介绍集中常用的输入类型

文本域  ( Text fields ) 
文本域通过 <input type="text"> 标签来设定,当用户要在表单总输入字母,数字等内容时,就会用到文本域.

密码字段 ( password )
Password: <input type="password" name="pwd">

单选按钮 ( Radio Buttons )
<input type="radio"> 标签定义了表单的单选框选项
实例: 
form action="">
   <input type="raido" name="sex" value="male">男<br>
   <input type="radio" name="sex" value="female">女<br>
</form>

复选框 ( checkboxes )
<input type="checkbox">
实例
form>
<input type="checkbox" name="vehicle" value="Bike">我喜欢自行车<br>
<input type="checkbox" name="vehicle" value="Car">我喜欢小汽车<br>
</form>

提交按钮
<input type="submit">
当点击确认按钮时,表单的内容会被传送到服务器,表单的动作属性action定义了服务端的文件名.
action属性会对接受到的用户输入数据进行相关的处理
实例:
<form name="input" action="html_form_action.php" method="get">
Username: <input type="text" name="user">
<input type="submit" value="submit">
</form>


post  :指的是 http post方法,表单那数据会包含在表单体内然后发送给服务器,用于提交敏感数据,如用户与密码等.
get  : 默认值,指的是HTTP get方法,表单数据会附加在action属性的url中,并以 ? 为分隔符,一般用于不敏感信息,如分页等.例如:https//www.runoob.com/?page=1.这里的page=1就是get方法提交的数据

html中form默认method 为 get

单选按钮
简单下拉菜单
select>option
预选下拉菜单
select>option[selected]

文本域
textarea [rows] [cols]

创建按钮
<input type="button" value="Hello World">\

带边框的表单
<form action="">
<fieldset>
<legend>Psrsonal information:</legend>
name: <input type="text" size="30"<br>
e-mail: <input type="text" size="30"<br>
</fieldset>
</form>

带有输入框和确认按钮的表单
带有复选框的表单
从表单发送电子邮件

表单中的重置按钮 
<input type="reset" value="重置">

定义选项组 optgroup
select> optgroup > option

高阶: datalist 指定一个预先定义的输入控件选项列表
     keygen  : 定义了表单的密钥对生成器字段
     output : 定义一个计算结果


HTML 框架
 通过使用框架,你可以在同一个浏览器窗口中显示不知一个页面
语法: iframe 
<iframe src="url"></iframe>

iframe-设置高度与宽度
height 和 width 属性定义 iframe标签的高度域宽度
属性默认以像素为单位 ,单是你可以指定其按照比例显示 (%(80))

rgba(255,0,0,0.5);

<p style="background-color:rgba(255,255,00,0.5)">

HTML颜色名 :
按颜色名排序:

HTML 颜色值

HTML 脚本
script标签
<script>
document.write("Hello World!")
</script>

HTML noscript 标签
noscript标签提供无法使用脚本时的替代内容 ,比方在浏览器禁用脚本时,或浏览器不支持客户端脚本时
noscript元素可包含普通html页面的body元素中能够找到的所有元素

javascript体验


实体 entities
&lt 等同于 <
&gt 等同于 >
&#169 等同于   ©


XHTML 图形 canvas元素
使用内联 svg
使用 CSS2D转换 CSS3 3D转换

html5使用CSS3
新选择器
新属性
动画
2D/3D转换
圆角
阴影效果
可下载的字体

语义元素
article 定义页面独立的内容区域
aside 定义页面的侧边栏内容
bdi 允许你设置一段文本,使其脱离其赋元素的文本方向设置
command 定义命令按钮,比如单选按钮,复选框或按钮
details 用于描述文档或文档某个部分的细节
dialog 定义对话框,比如提示框
summary标签包含details元素的标签
figure 规定独立的流内容
figcaption 定义figure元素的标题啊
footer定义section或document的页脚
header 定义文档的头部区域
mark 定义带有记号的文本
meter 定义度量衡 仅用于已知最大和最小的度量
nav 定义导航链接的部分
progress 定义任何类型的任务的进度
ruby 定义rudy注释
rt 定义字符的解释或发音
rp 在ruby注释中使用,定义不支持ruby元素的浏览器 所显示的内容
section 定义文档中的节(section 区段)
time 定义日期或时间
wbr规定在文本中的何处适合添加换行符

Canvas  画布

id 属性: 指定一个id属性 
width 和 height 属性定义画布的大小


使用 JavaScript 来绘制图像

var c=document.getElementById("myCanvas");
创建context对象
var ctx=c.getContext("2d");
内建的HTML5对象 拥有多种绘制路径, 矩阵 圆形,字符以及添加图像的方法
ctx.fillStyle="#FF0000";
设置css颜色 ,渐变,图案 fillStyle 默认属性是 黑色 #000000

ctx.fillRect(0,0,150,75);
fillRect(x,y,width,height) 方法定义了矩阵的填充方式

Canvas 路径 
moveTO(x,y)定义线条开始坐标
lineTO(x,y)定义线条结束坐标
绘制线条我们必须使用到 ink的方法 就像 stroke()























